总体这个命令分为3个阶段，Build，Cook，Run，分别对应三个指令 -build, -cook, -run
参考资料
https://gist.github.com/drewsberry/235e865eee90dc5e60ff
https://blog.mi.hdm-stuttgart.de/index.php/2017/02/11/uat-automation/
Automation.cs
LauncherProfile.h
ProjectParam.cs
https://ikrima.dev/ue4guide/build-guide/ubt/automationtool-exe-unrealbuildtool-exe-reference/
https://zhuanlan.zhihu.com/p/41931214
-help
查看帮助
 -project=D:\Jenkins\workspace\BuildAndCook/Frontend/Games/Solarland/Solarland.uproject
项目名称，完整绝对路径
-clean
清除之前的内容
-serverconfig=Development -clientconfig=Development
Server和Client分别的配置
-NoP4  / -P4
本次Build是否需要与Perforce交互
-NoCompileEditor -SkipBuildEditor
不编译Editor
-platform=Win64 -TargetPlatform=Win64+Android -serverplatform
平台，platform和targetplatform一样，表示非DS的platform
-NoCompile / -Compile
是否需要编译这些命令工具
-SkipCookingEditorContent
不Cook Editor内容
-allmaps
所有地图都cook ? 似乎可以不用？
-ue4exe=UE4Editor-Cmd.exe
指定UE4的可执行文件
-utf8output
stdout输出为UTF8 
-UnversionedCookedContent
忽略资源的版本管理，所有资源都视为最新版本
-SkipStage
是否跳过Stage到指定目录
-stage  -stagingdirectory="Output Directory" -archive     -archivedirectory="Output Directory"
打包后所有文件在Saved文件夹下
可以指定一个Staging文件夹，把所有文件拷贝过去
可以指定一个archive文件夹，把所有文件拷贝过去
-pak 
使用pak文件
-client
客户端版本
-server
DS
-IterativeCooking  

增量cook，也可以 -iterate
-ignorecookerrors

忽略cook错误继续打包
-package

打包，PC版本不用
-prereqs

是否包含UE4的依赖安装器 Prerequisite installer，这个东西可以自动安装Editor和引擎的缺失依赖项。
-nodebuginfo

拷贝到staging的时候不包含debug info
-cookflavor=ETC2
打包贴图压缩格式
-CrashReporter

编译CrashReporter
-compressed

压缩pak, 但是增加loading时间
-distribution
标记为distribution版本，例如iOS平台使用distribution的证书等


     -project=Path                      Project path (required), i.e: -project=QAGame,
                                                                                             -project=Samples\BlackJack\BlackJack.uproject,
                                                                                             -project=D:\Projects\MyProject.uproject
    -destsample                        Destination Sample name
    -foreigndest                       Foreign Destination
    -targetplatform=PlatformName       target platform for building, cooking and deployment (also -Platform)
    -servertargetplatform=PlatformName target platform for building, cooking and deployment of the dedicated server
                                       (also -ServerPlatform)
    -foreign                           Generate a foreign uproject from blankproject and use that
    -foreigncode                       Generate a foreign code uproject from platformergame and use that
    -CrashReporter                     true if we should build crash reporter
    -cook,                             -cookonthefly Determines if the build is going to use cooked data
    -skipcook                          use a cooked build, but we assume the cooked data is up to date and where it
                                       belongs, implies -cook
    -skipcookonthefly                  in a cookonthefly build, used solely to pass information to the package step
    -clean                             wipe intermediate folders before building
    -unattended                        assumes no operator is present, always terminates without waiting for something.
    -pak                               generate a pak file
    -iostore                           generate I/O store container file(s)
    -signpak=keys                      sign the generated pak file with the specified key, i.e.
                                       -signpak=C:\Encryption.keys. Also implies -signedpak.
    -prepak                            attempt to avoid cooking and instead pull pak files from the network, implies pak
                                       and skipcook
    -signed                            the game should expect to use a signed pak file.
    -PakAlignForMemoryMapping          The game will be set up for memory mapping bulk data.
    -skippak                           use a pak file, but assume it is already built, implies pak
    -skipiostore                       override the -iostore commandline option to not run it
    -stage                             put this build in a stage directory
    -skipstage                         uses a stage directory, but assumes everything is already there, implies -stage
    -manifests                         generate streaming install manifests when cooking data
    -createchunkinstall                generate streaming install data from manifest when cooking data, requires -stage
                                       & -manifests
    -archive                           put this build in an archive directory
    -build                             True if build step should be executed
    -noxge                             True if XGE should NOT be used for building
    -CookPartialgc                     while cooking clean up packages as we are done with them rather then cleaning
                                       everything up when we run out of space
    -CookInEditor                      Did we cook in the editor instead of in UAT
    -IgnoreCookErrors                  Ignores cook errors and continues with packaging etc
    -nodebuginfo                       do not copy debug files to the stage
    -separatedebuginfo                 output debug info to a separate directory
    -MapFile                           generates a *.map file
    -nocleanstage                      skip cleaning the stage directory
    -run                               run the game after it is built (including server, if -server)
    -cookonthefly                      run the client with cooked data provided by cook on the fly server
    -Cookontheflystreaming             run the client in streaming cook on the fly mode (don't cache files locally
                                       instead force reget from server each file load)
    -fileserver                        run the client with cooked data provided by UnrealFileServer
    -dedicatedserver                   build, cook and run both a client and a server (also -server)
    -client                            build, cook and run a client and a server, uses client target configuration
    -noclient                          do not run the client, just run the server
    -logwindow                         create a log window for the client
    -package                           package the project for the target platform
    -distribution                      package for distribution the project
    -prereqs                           stage prerequisites along with the project
    -applocaldir                       location of prerequisites for applocal deployment
    -Prebuilt                          this is a prebuilt cooked and packaged build
    -AdditionalPackageOptions          extra options to pass to the platform's packager
    -deploy                            deploy the project for the target platform
    -getfile                           download file from target after successful run
    -IgnoreLightMapErrors              Whether Light Map errors should be treated as critical
    -stagingdirectory=Path             Directory to copy the builds to, i.e. -stagingdirectory=C:\Stage
    -ue4exe=ExecutableName             Name of the UE4 Editor executable, i.e. -ue4exe=UE4Editor.exe
    -archivedirectory=Path             Directory to archive the builds to, i.e. -archivedirectory=C:\Archive
    -archivemetadata                   Archive extra metadata files in addition to the build (e.g. build.properties)
    -createappbundle                   When archiving for Mac, set this to true to package it in a .app bundle instead
                                       of normal loose files
    -iterativecooking                  Uses the iterative cooking, command line: -iterativecooking or -iterate
    -CookMapsOnly                      Cook only maps this only affects usage of -cookall the flag
    -CookAll                           Cook all the things in the content directory for this project
    -SkipCookingEditorContent          Skips content under /Engine/Editor when cooking
    -FastCook                          Uses fast cook path if supported by target
    -cmdline                           command line to put into the stage in UE4CommandLine.txt
    -bundlename                        string to use as the bundle name when deploying to mobile device
    -map                               map to run the game with
    -AdditionalServerMapParams         Additional server map params, i.e ?param=value
    -device                            Devices to run the game on
    -serverdevice                      Device to run the server on
    -skipserver                        Skip starting the server
    -numclients=n                      Start extra clients, n should be 2 or more
    -addcmdline                        Additional command line arguments for the program
    -servercmdline                     Additional command line arguments for the program
    -clientcmdline                     Override command line arguments to pass to the client
    -nullrhi                           add -nullrhi to the client commandlines
    -fakeclient                        adds ?fake to the server URL
    -editortest                        rather than running a client, run the editor instead
    -RunAutomationTests                when running -editortest or a client, run all automation tests, not compatible
                                       with -server
    -Crash=index                       when running -editortest or a client, adds commands like debug crash, debug
                                       rendercrash, etc based on index
    -deviceuser                        Linux username for unattended key genereation
    -devicepass                        Linux password
    -RunTimeoutSeconds                 timeout to wait after we lunch the game
    -SpecifiedArchitecture             Determine a specific Minimum OS
    -UbtArgs                           extra options to pass to ubt
    -MapsToRebuildLightMaps            List of maps that need light maps rebuilding
    -MapsToRebuildHLODMaps             List of maps that need HLOD rebuilding
    -ForceMonolithic                   Toggle to combined the result into one executable
    -ForceDebugInfo                    Forces debug info even in development builds
    -ForceNonUnity                     Toggle to disable the unity build system
    -ForceUnity                        Toggle to force enable the unity build system
    -Licensee                          If set, this build is being compiled by a licensee
    -NoSign                            Skips signing of code/content files.
